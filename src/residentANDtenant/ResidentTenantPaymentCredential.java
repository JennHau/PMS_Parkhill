/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package residentANDtenant;

import java.awt.Toolkit;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import classes.Invoice;
import classes.PMS_DateTimeFormatter;
import java.awt.event.KeyEvent;
import javax.swing.JTextField;

/**
 *
 * @author Winson
 */
public class ResidentTenantPaymentCredential extends javax.swing.JFrame {
    private ArrayList<String> itemList;
    private ArrayList<Invoice> invoiceList;
    private final boolean forFacility;
    private final boolean modifyBooking;
    
    private final ResidentTenant RT;
    PMS_DateTimeFormatter DTF = new PMS_DateTimeFormatter();

    /**
     * Creates new form ResidentTenantPaymentGateway
     * @param RT
     * @param totalAmount
     * @param itemList
     * @param forFacility
     * @param modify
     * @param invoiceList
     */
    public ResidentTenantPaymentCredential(ResidentTenant RT, String totalAmount, ArrayList itemList, boolean forFacility, boolean modify, ArrayList<Invoice> invoiceList) {
        this.RT = RT;
        this.forFacility = forFacility;
        this.modifyBooking = modify;
        this.invoiceList = invoiceList;
        this.setItemList(itemList);
        
        initComponents();
        
        this.amountSetUp(totalAmount);
        
        runDefaultSetUp();
    }
    
    private void runDefaultSetUp() {
        setWindowIcon();
    }
    
    private void amountSetUp(String totalAmount) {
        totalAmountTF.setText(totalAmount);
    }
    
    private void setWindowIcon() {
        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("/images/windowIcon.png")));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel23 = new javax.swing.JLabel();
        cardNo1TF = new javax.swing.JTextField();
        cardNo2TF = new javax.swing.JTextField();
        cardNo3TF = new javax.swing.JTextField();
        cardNo4TF = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        holderNameTF = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        expMonthTF = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        expYearTF = new javax.swing.JTextField();
        cvvNoTF = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        totalAmountTF = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        payBTN = new javax.swing.JButton();
        cancelBTN = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        messageTF = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("PARKHILL RESIDENCE");

        jPanel1.setBackground(new java.awt.Color(13, 24, 42));

        jLabel2.setFont(new java.awt.Font("Britannic Bold", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("PAYMENT GATEWAY");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/parkhillLogo.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(94, 94, 94))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel23.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(51, 51, 51));
        jLabel23.setText("Card Number: ");

        cardNo1TF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cardNo1TFKeyTyped(evt);
            }
        });

        cardNo2TF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardNo2TFActionPerformed(evt);
            }
        });
        cardNo2TF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cardNo2TFKeyTyped(evt);
            }
        });

        cardNo3TF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cardNo3TFKeyTyped(evt);
            }
        });

        cardNo4TF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cardNo4TFKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cardNo4TFKeyTyped(evt);
            }
        });

        jLabel24.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(51, 51, 51));
        jLabel24.setText("Card Holder Name:");

        holderNameTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                holderNameTFKeyTyped(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(51, 51, 51));
        jLabel25.setText("Expired Date:");

        jLabel26.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(51, 51, 51));
        jLabel26.setText("CVV:");

        expMonthTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                expMonthTFKeyTyped(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(51, 51, 51));
        jLabel1.setText("/");

        expYearTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                expYearTFKeyTyped(evt);
            }
        });

        cvvNoTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cvvNoTFKeyTyped(evt);
            }
        });

        jLabel27.setFont(new java.awt.Font("Yu Gothic UI", 1, 14)); // NOI18N
        jLabel27.setForeground(new java.awt.Color(51, 51, 51));
        jLabel27.setText("Total Amount to Pay:");

        totalAmountTF.setEditable(false);
        totalAmountTF.setHorizontalAlignment(javax.swing.JTextField.TRAILING);
        totalAmountTF.setEnabled(false);

        payBTN.setText("Pay");
        payBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payBTNActionPerformed(evt);
            }
        });

        cancelBTN.setText("Cancel");
        cancelBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBTNActionPerformed(evt);
            }
        });

        jLabel4.setText("16-digits");

        jLabel5.setText("Card owner name");

        jLabel6.setText("Card expiry date");

        jLabel7.setText("3-digits");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelBTN)
                .addGap(28, 28, 28)
                .addComponent(payBTN)
                .addGap(148, 148, 148))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(cardNo1TF, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(32, 32, 32)
                                            .addComponent(cardNo2TF, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(holderNameTF)
                                        .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGap(32, 32, 32)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addComponent(cardNo3TF, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(32, 32, 32)
                                            .addComponent(cardNo4TF, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addComponent(totalAmountTF, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                                    .addComponent(expMonthTF, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGap(3, 3, 3)
                                                    .addComponent(jLabel1)
                                                    .addGap(4, 4, 4)
                                                    .addComponent(expYearTF, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addComponent(jLabel25, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGap(27, 27, 27)
                                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(cvvNoTF)
                                                .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                                .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(3, 3, 3)))
                    .addComponent(messageTF, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cardNo1TF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cardNo2TF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cardNo3TF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cardNo4TF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addComponent(jLabel4)
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, 0)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(holderNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(expMonthTF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(expYearTF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cvvNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(23, 23, 23)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(totalAmountTF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(3, 3, 3)
                .addComponent(messageTF)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(payBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void payBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payBTNActionPerformed
        // TODO add your handling code here:
        boolean payable;
        payable = checkCardNo();
        
        if (payable) {
            payable = checkHolderName();
            
            if (payable) {
                payable = checkExpiryDate();
                
                if (payable) {
                    payable = checkCVV();
                    
                    if (payable) {
                        if (itemList != null) {
                            if (!itemList.isEmpty()) {
                                if (forFacility) {
                                    if (modifyBooking) {
                                        String bookingId = itemList.get(0).split(RT.TF.sp)[0];

                                        RT.crud.delete(RT.TF.facilityBookingFile, bookingId, 0);
                                        RT.FH.fileWrite("facilityBooking.txt", true, itemList);
                                        JOptionPane.showMessageDialog (null, "Facility Booking has been modified!", 
                                                        "MODIFY FACILITY BOOKING", JOptionPane.INFORMATION_MESSAGE);
                                    }
                                    else {
                                        RT.FH.fileWrite("facilityBooking.txt", true, itemList);
                                        JOptionPane.showMessageDialog (null, "Facility Booking has been made!", 
                                                        "FACILITY BOOKING", JOptionPane.INFORMATION_MESSAGE);
                                    }
                                }
                            }
                        }
                        else if (!invoiceList.isEmpty()){
                            for (Invoice eachInvId : invoiceList) {
                                RT.PYM.storePayment(eachInvId, RT.getUserID());
                            }

                            JOptionPane.showMessageDialog (null, "Payment has been made successfully!", 
                            "PAYMENT", JOptionPane.INFORMATION_MESSAGE);
                        }
                        
                        if (ResidentTenantPaymentManagement.rtPayMan != null) {
                            ResidentTenantPaymentManagement.rtPayMan.dispose();
                        }

                        if (ResidentTenantFacilityPaymentGateway.rtFacPay != null) {
                            ResidentTenantFacilityPaymentGateway.rtFacPay.dispose();
                        }
                        
                        if (ResidentTenantBookFacility.rtBookFacility != null) {
                            ResidentTenantBookFacility.rtBookFacility.dispose();
                        }
                        
                        if (ResidentTenantPaymentGatewayModifyFacilityBooking.rtPayFacMod != null) {
                            ResidentTenantPaymentGatewayModifyFacilityBooking.rtPayFacMod.dispose();
                        }
                        
                        if (ResidentTenantManageBookedFacility.rtManageBooked != null) {
                            ResidentTenantManageBookedFacility.rtManageBooked.dispose();
                        }
                        
                        if (ResidentTenantFacilityPaymentGateway.rtFacPay != null) {
                            ResidentTenantFacilityPaymentGateway.rtFacPay.dispose();
                        }
                        
                        this.dispose();

                        if (forFacility) {
                            RT.toBookedFacility(RT);
                        }
                        else {
                            RT.toPaymentManagement(RT);
                        }
                    }
                    else {
                        messageTF.setText("The CVV is the 3 digit number behind the card.");
                    }
                }
                else {
                    messageTF.setText("Please enter a correct expiration date of the card.");
                }
            }
            else {
                messageTF.setText("The card holder name is the person name who own the card.");
            }
        }
        else {
            messageTF.setText("The card number should contains only 16 digits.");
        }
    }//GEN-LAST:event_payBTNActionPerformed

    // validation for card number
    private boolean checkCardNo() {
        String[] cardField = {cardNo1TF.getText(), cardNo2TF.getText(), cardNo3TF.getText(), cardNo4TF.getText()};
        
        for (String eachField : cardField) {
            int fieldLength = eachField.length();
            if (fieldLength != 4) {
                return false;
            }
            
            try {
                Integer.parseInt(eachField);
            }
            catch (NumberFormatException nfe) {
                return false;
            }
        }
        
        return true;
    }
    
    // validation for card holder name
    private boolean checkHolderName() {
        return (holderNameTF.getText() != null);
    }
    
    // validation for expiry month
    private String checkExpiryMonth() {
        String[] monthList = {"01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12"};
        
        String month = expMonthTF.getText();
        
        if (month.length() != 2) {
            return null;
        }
        
        for (String eachMon : monthList) {
            if (month.equals(eachMon)) {
                return month;
            }
        }
        
        return null;
    }
    
    // validation for expiry year
    private String checkExpiryYear() {
        int year = Integer.valueOf(expYearTF.getText());
        
        for (int yearNow = LocalDate.now().getDayOfYear(); yearNow < yearNow + 8; yearNow++) {
            if (year == yearNow) {
                return String.valueOf(year);
            }
        }
        
        return null;
    }
    
    // validation for expiry date
    private boolean checkExpiryDate () {
        String month = checkExpiryMonth();
        String year = checkExpiryYear();
        
        String date = year + "-" + month + "-01";
        LocalDate enteredDate = DTF.formatDate(date);
        
        LocalDate dateNow = LocalDate.now();
        
        return (enteredDate.isAfter(dateNow));
    }
    
    // validation for cvv
    private boolean checkCVV() {
        String cvvNo = cvvNoTF.getText();
        return (cvvNo.length() == 3);
    }
    
    private void cancelBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBTNActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_cancelBTNActionPerformed

    private void cardNo1TFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cardNo1TFKeyTyped
        // TODO add your handling code here:
        cardFieldValidation(evt, cardNo1TF);
    }//GEN-LAST:event_cardNo1TFKeyTyped

    private void cardNo2TFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cardNo2TFKeyTyped
        // TODO add your handling code here:
        cardFieldValidation(evt, cardNo2TF);
    }//GEN-LAST:event_cardNo2TFKeyTyped

    private void cardNo3TFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cardNo3TFKeyTyped
        // TODO add your handling code here:
        cardFieldValidation(evt, cardNo3TF);
    }//GEN-LAST:event_cardNo3TFKeyTyped

    private void cardNo4TFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cardNo4TFKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_cardNo4TFKeyPressed

    private void cardNo4TFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cardNo4TFKeyTyped
        // TODO add your handling code here:
        cardFieldValidation(evt, cardNo4TF);
    }//GEN-LAST:event_cardNo4TFKeyTyped

    private void expMonthTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_expMonthTFKeyTyped
        // TODO add your handling code here:
        int text = expMonthTF.getText().length();
        char c = evt.getKeyChar();
        if (!(c == KeyEvent.VK_DELETE || Character.isDigit(c)) || text > 1){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_expMonthTFKeyTyped

    private void cardNo2TFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardNo2TFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cardNo2TFActionPerformed

    private void expYearTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_expYearTFKeyTyped
        // TODO add your handling code here:
        int text = expYearTF.getText().length();
        char c = evt.getKeyChar();
        if (!(c == KeyEvent.VK_DELETE || Character.isDigit(c)) || text > 3){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_expYearTFKeyTyped

    private void cvvNoTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cvvNoTFKeyTyped
        // TODO add your handling code here:
        int text = cvvNoTF.getText().length();
        char c = evt.getKeyChar();
        if (!(c == KeyEvent.VK_DELETE || Character.isDigit(c)) || text > 2){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_cvvNoTFKeyTyped

    private void holderNameTFKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_holderNameTFKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!(c == KeyEvent.VK_DELETE || Character.isAlphabetic(c) || c == KeyEvent.VK_SPACE)){
            getToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_holderNameTFKeyTyped

    // validate card field
    private void cardFieldValidation(java.awt.event.KeyEvent evt, JTextField cardField) {
        int text = cardField.getText().length();
        char c = evt.getKeyChar();
        if (!(c == KeyEvent.VK_DELETE || Character.isDigit(c)) || text > 3){
            getToolkit().beep();
            evt.consume();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResidentTenantPaymentCredential.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResidentTenantPaymentCredential.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResidentTenantPaymentCredential.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResidentTenantPaymentCredential.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ResidentTenantPaymentCredential(null, null, null, false, false, null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelBTN;
    private javax.swing.JTextField cardNo1TF;
    private javax.swing.JTextField cardNo2TF;
    private javax.swing.JTextField cardNo3TF;
    private javax.swing.JTextField cardNo4TF;
    private javax.swing.JTextField cvvNoTF;
    private javax.swing.JTextField expMonthTF;
    private javax.swing.JTextField expYearTF;
    private javax.swing.JTextField holderNameTF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel messageTF;
    private javax.swing.JButton payBTN;
    private javax.swing.JTextField totalAmountTF;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the itemList
     */
    public ArrayList<String> getItemList() {
        return itemList;
    }

    /**
     * @param itemList the itemList to set
     */
    public void setItemList(ArrayList<String> itemList) {
        this.itemList = itemList;
    }
}
